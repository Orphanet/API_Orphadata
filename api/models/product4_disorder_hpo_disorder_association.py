# coding: utf-8

from __future__ import absolute_import

from api.models.base_model_ import Model
from api.models.product4_disorder_hpo import Product4DisorderHPO  # noqa: F401,E501
from api import util


class Product4DisorderHPODisorderAssociation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, hpo: Product4DisorderHPO=None, hpo_frequency: str=None, diagnostic_criteria: str=None):  # noqa: E501
        """Product4DisorderHPODisorderAssociation - a model defined in Swagger

        :param hpo: The hpo of this Product4DisorderHPODisorderAssociation.  # noqa: E501
        :type hpo: Product4DisorderHPO
        :param hpo_frequency: The hpo_frequency of this Product4DisorderHPODisorderAssociation.  # noqa: E501
        :type hpo_frequency: str
        :param diagnostic_criteria: The diagnostic_criteria of this Product4DisorderHPODisorderAssociation.  # noqa: E501
        :type diagnostic_criteria: str
        """
        self.swagger_types = {
            'hpo': Product4DisorderHPO,
            'hpo_frequency': str,
            'diagnostic_criteria': str
        }

        self.attribute_map = {
            'hpo': 'HPO',
            'hpo_frequency': 'HPOFrequency',
            'diagnostic_criteria': 'DiagnosticCriteria'
        }
        self._hpo = hpo
        self._hpo_frequency = hpo_frequency
        self._diagnostic_criteria = diagnostic_criteria

    @classmethod
    def from_dict(cls, dikt) -> 'Product4DisorderHPODisorderAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The product4_Disorder_HPODisorderAssociation of this Product4DisorderHPODisorderAssociation.  # noqa: E501
        :rtype: Product4DisorderHPODisorderAssociation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hpo(self) -> Product4DisorderHPO:
        """Gets the hpo of this Product4DisorderHPODisorderAssociation.


        :return: The hpo of this Product4DisorderHPODisorderAssociation.
        :rtype: Product4DisorderHPO
        """
        return self._hpo

    @hpo.setter
    def hpo(self, hpo: Product4DisorderHPO):
        """Sets the hpo of this Product4DisorderHPODisorderAssociation.


        :param hpo: The hpo of this Product4DisorderHPODisorderAssociation.
        :type hpo: Product4DisorderHPO
        """

        self._hpo = hpo

    @property
    def hpo_frequency(self) -> str:
        """Gets the hpo_frequency of this Product4DisorderHPODisorderAssociation.


        :return: The hpo_frequency of this Product4DisorderHPODisorderAssociation.
        :rtype: str
        """
        return self._hpo_frequency

    @hpo_frequency.setter
    def hpo_frequency(self, hpo_frequency: str):
        """Sets the hpo_frequency of this Product4DisorderHPODisorderAssociation.


        :param hpo_frequency: The hpo_frequency of this Product4DisorderHPODisorderAssociation.
        :type hpo_frequency: str
        """

        self._hpo_frequency = hpo_frequency

    @property
    def diagnostic_criteria(self) -> str:
        """Gets the diagnostic_criteria of this Product4DisorderHPODisorderAssociation.


        :return: The diagnostic_criteria of this Product4DisorderHPODisorderAssociation.
        :rtype: str
        """
        return self._diagnostic_criteria

    @diagnostic_criteria.setter
    def diagnostic_criteria(self, diagnostic_criteria: str):
        """Sets the diagnostic_criteria of this Product4DisorderHPODisorderAssociation.


        :param diagnostic_criteria: The diagnostic_criteria of this Product4DisorderHPODisorderAssociation.
        :type diagnostic_criteria: str
        """

        self._diagnostic_criteria = diagnostic_criteria
